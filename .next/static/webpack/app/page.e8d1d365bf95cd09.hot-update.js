"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/api.js":
/*!*************************!*\
  !*** ./services/api.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/polyfills/process.js\");\n// services/api.js\n//-----------------------------------------------\n//  Central API helper for your Django backend\n//-----------------------------------------------\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"https://srkdp-production.up.railway.app\";\nclass ApiService {\n    /*-----------------------------------------------------------*\r\n   |  Generic request helper  (includes detailed debug logs)   |\r\n   *-----------------------------------------------------------*/ static async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const token = localStorage.getItem('access_token');\n        /* ---------- DEBUG: token + header state ----------------- */ console.log('üîç REQUEST to:', url);\n        console.log('üîë Token in localStorage:', token ? 'FOUND' : 'NONE');\n        if (token) {\n            console.log('üîë Token (first 20 chars):', token.substring(0, 20) + '‚Ä¶');\n        }\n        /* -------------------------------------------------------- */ // build fetch config\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                ...options.headers\n            },\n            ...options\n        };\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n            console.log('‚úÖ Authorization header attached');\n        } else {\n            console.log('‚ùå Authorization header NOT attached');\n        }\n        console.log('üì§ Full fetch config ‚Üí', config);\n        try {\n            const res = await fetch(url, config);\n            const data = await res.json();\n            console.log('‚ñ∫ API', res.status, url, data);\n            if (!res.ok) {\n                throw new Error(data.message || data.detail || \"HTTP \".concat(res.status));\n            }\n            return data;\n        } catch (err) {\n            console.error('‚úñ ApiService.request', err);\n            throw err;\n        }\n    }\n    /*-----------------------------------------------------------*\r\n   |  Authentication helpers                                   |\r\n   *-----------------------------------------------------------*/ static login(username, password) {\n        return this.request('/auth/login/', {\n            method: 'POST',\n            body: JSON.stringify({\n                username,\n                password\n            })\n        });\n    }\n    static logout(refreshToken) {\n        return this.request('/auth/logout/', {\n            method: 'POST',\n            body: JSON.stringify({\n                refresh_token: refreshToken\n            })\n        });\n    }\n    static getProfile() {\n        return this.request('/auth/profile/');\n    }\n    /*-----------------------------------------------------------*\r\n   |  Teacher dashboard                                        |\r\n   *-----------------------------------------------------------*/ static getTeacherDashboard() {\n        return this.request('/teachers/dashboard/');\n    }\n    /*-----------------------------------------------------------*\r\n   |  Attendance - UPDATED WITH NEW METHODS                   |\r\n   *-----------------------------------------------------------*/ static getClassStudents(classId) {\n        return this.request(\"/attendance/class/\".concat(classId, \"/students/\"));\n    }\n    // NEW: Save attendance to database\n    static markAttendance(attendanceData) {\n        return this.request('/attendance/mark/', {\n            method: 'POST',\n            body: JSON.stringify(attendanceData)\n        });\n    }\n    // NEW: Get existing attendance from database\n    static getAttendance(classId, date, session) {\n        return this.request(\"/attendance/class/\".concat(classId, \"/?date=\").concat(date, \"&session=\").concat(session));\n    }\n    // NEW: Get comprehensive attendance report for all classes\n    static getAttendanceReport(date, session) {\n        return this.request(\"/attendance/report/?date=\".concat(date, \"&session=\").concat(session));\n    }\n    /*-----------------------------------------------------------*\r\n   |  Student management                                       |\r\n   *-----------------------------------------------------------*/ static async addStudent(studentData) {\n        return this.request('/students/add/', {\n            method: 'POST',\n            body: JSON.stringify(studentData)\n        });\n    }\n    static async addStudentsBulk(bulkData) {\n        return this.request('/students/add-bulk/', {\n            method: 'POST',\n            body: JSON.stringify(bulkData)\n        });\n    }\n    static async deleteStudent(studentId) {\n        return this.request(\"/students/\".concat(studentId, \"/delete/\"), {\n            method: 'DELETE'\n        });\n    }\n}\n/*-----------------------------------------------------------*\r\n   |  Shared base-URL                                          |\r\n   *-----------------------------------------------------------*/ ApiService.baseURL = API_BASE_URL;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ApiService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/api.js\n"));

/***/ })

});